generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String           @id @default(cuid())
  clerkId         String           @unique
  email           String           @unique
  nickname        String?
  role            Role             @default(VOLUNTEER) // ✅ enum 不加引號
  isFirstLogin    Boolean          @default(true)
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  lastLoginAt     DateTime?
  disbursements   Disbursement[]
  donationRecords DonationRecord[]
  inventoryLogs   InventoryLog[]
  customItems     CustomItem[]
}

model Supply {
  id            String         @id @default(cuid())
  name          String
  category      String
  quantity      Int
  unit          String         @default("個")
  safetyStock   Int
  isActive      Boolean        @default(true)
  sortOrder     Int            @default(0)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  inventoryLogs InventoryLog[]

  @@unique([name, category])
}

model Donor {
  id            String           @id @default(cuid())
  name          String           @unique
  phone         String?
  taxId         String?
  address       String?
  isActive      Boolean          @default(true)
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
  donations     DonationRecord[]
}

model DonationRecord {
  id            String         @id @default(cuid())
  serialNumber  String         @unique @default("")
  donorId       String
  donor         Donor          @relation(fields: [donorId], references: [id])
  createdAt     DateTime       @default(now())
  userId        String
  donationItems DonationItem[]
  user          User           @relation(fields: [userId], references: [id])
}

model DonationItem {
  id             String           @id @default(cuid())
  donationId     String
  itemName       String
  itemCategory   String
  itemUnit       String
  quantity       Int              @default(1)
  expiryDate     DateTime?
  isStandard     Boolean          @default(false)
  notes          String?
  donation       DonationRecord   @relation(fields: [donationId], references: [id])
  itemConditions ItemCondition[]
}

model Disbursement {
  id                String             @id @default(cuid())
  serialNumber      String             @unique @default("")
  recipientUnit     String
  recipientPhone    String?
  createdAt         DateTime           @default(now())
  userId            String
  user              User               @relation(fields: [userId], references: [id])
  disbursementItems DisbursementItem[]
}

model DisbursementItem {
  id               String           @id @default(cuid())
  disbursementId   String
  itemName         String
  itemCategory     String
  itemUnit         String
  disbursement     Disbursement     @relation(fields: [disbursementId], references: [id])
  itemConditions   ItemCondition[]
}

model InventoryLog {
  id           String     @id @default(cuid())
  supplyId     String
  changeType   ChangeType
  changeAmount Int
  newQuantity  Int
  reason       String
  createdAt    DateTime   @default(now())
  userId       String
  user         User       @relation(fields: [userId], references: [id])
  supply       Supply     @relation(fields: [supplyId], references: [id])
}

enum Role {
  ADMIN
  STAFF
  VOLUNTEER
}

model Category {
  id          String   @id @default(cuid())
  name        String   @unique
  isActive    Boolean  @default(true)
  sortOrder   Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}


model RecipientUnit {
  id          String   @id @default(cuid())
  name        String   @unique
  phone       String?
  isActive    Boolean  @default(true)
  sortOrder   Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model InventoryChangeReason {
  id          String    @id @default(cuid())
  reason      String
  changeType  ChangeType
  isActive    Boolean   @default(true)
  sortOrder   Int       @default(0)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Unit {
  id          String   @id @default(cuid())
  name        String   @unique
  isActive    Boolean  @default(true)
  sortOrder   Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum ChangeType {
  INCREASE
  DECREASE
}

model SerialNumberCounter {
  id         String   @id @default(cuid())
  type       String   @unique // "donation", "disbursement", or "report"
  counter    Int      @default(0)
  prefix     String   // "DN" for donation, "DS" for disbursement, "RP" for report
  updatedAt  DateTime @updatedAt
  createdAt  DateTime @default(now())
}

// 標準物品定義（對應 public/item_list.json）
model StandardItem {
  id          String  @id @default(cuid())
  name        String
  category    String
  units       Json    // ["包", "罐", "盒"]
  defaultUnit String
  isActive    Boolean @default(true)
  sortOrder   Int     @default(0)

  @@unique([name, category])
}

// 自訂物品（使用者新增的物品）
model CustomItem {
  id          String   @id @default(cuid())
  name        String
  category    String
  units       Json     // ["個"]
  defaultUnit String
  isActive    Boolean  @default(true)  // 支援隱藏功能
  isHidden    Boolean  @default(false) // 隱藏狀態
  sortOrder   Int      @default(0)
  createdAt   DateTime @default(now())
  createdBy   String
  user        User     @relation(fields: [createdBy], references: [id])

  @@unique([name, category])
}

// 品相條件（每個捐贈/領取物品的品相、數量、備註）
model ItemCondition {
  id                 String            @id @default(cuid())
  condition          String            // 品相描述（全新、二手、損壞等）
  quantity           Int               // 數量
  notes              String?           // 品相備註
  createdAt          DateTime          @default(now())

  // 關聯到捐贈項目
  donationItemId     String?
  donationItem       DonationItem?     @relation(fields: [donationItemId], references: [id])

  // 關聯到領取項目
  disbursementItemId String?
  disbursementItem   DisbursementItem? @relation(fields: [disbursementItemId], references: [id])
}

// 物品庫存聚合（用於庫存顯示）
model ItemStock {
  id           String   @id @default(cuid())
  itemName     String
  itemCategory String
  itemUnit     String
  totalStock   Int      // 總庫存數量
  safetyStock  Int      @default(0)
  isStandard   Boolean  @default(false) // 是否為標準物品
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@unique([itemName, itemCategory])
}
